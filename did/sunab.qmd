---
title: "Interaction-Weighted Estimator"
subtitle: "Sun and Abraham (2021)"
---

```{r}
#| message: false
#| warning: false

# Packages Needed:
library(fixest)
library(ggfixest)
```

The Interaction-Weighted estimator developed by Sun and Abraham (2021) is designed for staggered DiD, accounting for issues in TWFE.

The estimator divides all units into groups based on their initial treatment implementation. These groups are encoded into a new categorical variable $G_i$. Then, the estimator calculates dynamic ATT's separately for group, using only valid comparisons. This is done by interacting a relative-time variable $R_{it}$ with $G_i$.

$$
Y_{it} = \alpha_i + \gamma_t + \underbrace{\sum_{g}\sum_{r â‰  -1} 1\{R_{it} = r\} \cdot 1\{G_{i} = g\} \cdot \tau_{r,g}}_{\text{interactions}} + \cov + \eps_{it}
$$

These interactions will produce many coefficients $\blue{\tau_{r,g}}$. These coefficients capture all the heterogeneity in effects. These coefficients are manually aggregated together into dynamic ATT's by relative treatment time using proper weighting.

```{r}
#| echo: false
#| warning: false
#| message: false

data(base_stagg, package = "fixest")
df <- base_stagg
colnames(df) <- c("unit", "time", "first.treated", "rel.time", "treat", "te", "covariate", "outcome")
```

```{r}
#| warning: false
#| message: false
#| fig-height: 3

model <- feols(
  fml  = outcome ~ sunab(first.treated, time) + covariate | unit + time,
  data = df,
  vcov = ~unit
)

ggiplot(
  # required options
  object   = model,
  drop     = "[[:digit:]]{2}",  # this limits pre-post period to -9 to 9.
  ref.line = 0,                 # adds a line at treatment year
  
  # aesthetic options
  xlab     = "Time Relative to Treatment",  # x-axis label
  ylab     = "Dynamic ATT Estimate",        # y-axis label
  main     = "Dynamic Treatment Effects",   # title for plot
)
```

::: small
We can see parallel trends is met in this plot, as the negative relative time estimates all include 0 in their intervals.
:::

We can also aggregate the dynamic ATT's into one singular ATT:

```{r}
#| warning: false
#| message: false
#| comment: "#>"
#| class-output: r

aggregate(model, "att")
```

<br />

::: small
For technical details, see [Sun and Abraham (2021)](https://www.sciencedirect.com/science/article/abs/pii/S030440762030378X) or [this github page](https://asjadnaqvi.github.io/DiD/docs/code_r/07_sunab_r/).

For more options with the sunab and aggregate functions, see the [documentation for fixest](https://lrberge.github.io/fixest/reference/index.html).
:::
