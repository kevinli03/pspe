---
title: "Item Response Theory"
---

Item Response Theory (IRT) is an extension of factor analysis, that deals with cases with a continuous latent factor but a binary/categorical set of observed items.

::: center-graph
```{dot}
//| fig-width: 4.5
//| fig-height: 1.4
digraph example2 {
  bgcolor="transparent";
  // Nodes
  F [shape=box, pos = "0,0!", label=<<FONT FACE="Helvetica">&xi; (Unobserved)</FONT>>]
  X1 [shape=box, pos = "2,0!", label="X1 (Observed)"]
  X2 [shape=box, pos = "1,-2!", label="X2 (Observed)"]
  X3 [shape=box, pos="1,0!", label="X3 (Observed)"]

  // Edges
  {F -> X1 [label=<<FONT FACE="Helvetica">&lambda;</FONT>>]}
  {F -> X2 [label=<<FONT FACE="Helvetica">&lambda;</FONT>>]}
  {F -> X3 [label=<<FONT FACE="Helvetica">&lambda;</FONT>>]}
  
  graph [nodesep=0.5, ranksep=0.5]

}
```
:::

We must have at least 3 observed items for estimation purposes. The items are associated with the continuous latent factor with a **binomial logistic model**:

$$
\begin{align}
\text{logit}[Pr(X_1 = 1 \ | \ \xi)] & = \tau_1 + \lambda_1 \ \xi \\
\text{logit}[Pr(X_2 = 1 \ | \ \xi)] & = \tau_2 + \lambda_2 \ \xi \\
\text{logit}[Pr(X_3 = 1 \ | \ \xi)] & = \tau_3 + \lambda_3 \ \xi \\
\end{align}
$$

::: small
For categorical (more than 2 categories) items, a multinomial or ordinal logistic model is used. But this is pretty rare for someone to actually fit a model of this type.
:::

$\tau_i$ is the intercept of the model, called the **difficulty**. $\lambda_i$ is the coefficeint that describes the relationship between any item $X_i$ and the factor. These are called **factor loadings**. It is also called the **discrimination** parameter.

These factor loadings $\lambda$ are interepreted in a very similar way to factor analysis. The intercepts $\tau_i$ also tell us how "common" a value of 1 for the item is. For example, below, the items are policies that politicians support/don't oppose.

![](images/clipboard-4283525368.png){fig-align="center" width="65%"}

::: small
a1 are the loadings $\lambda$, and d is the intercept. The rows are binary items - with 1 indicating a politician supports that, and 0 indicating a politician opposes that.
:::

We can first look at the signs of $\lambda$: The latent factor increases with agreeing (a value of 1) with PartialBirth, CapitalGains, and CAFTA. The latent factor decreases with agreeing (a value of 1) with StemCell, IraqWithdraw, Immigration, and Minimum Wage.

From this, we can kind of get a sense that latent variable is measuring right-left political affiliation, with higher values indicating right-wing, since agreeing left wing policies like IraqWithdraw, Immigration, and Minimum Wage are negative.

The absolute size of the factor loadings are quite similar - we can see that CAFTA is the least important item to the factor.

<br />

To run an item response theory mode, we need the **mirt** package:

```{r, eval = F}
library(mirt)
```

Then, we run the model as follows (make sure to subset your data to only include the items).

```{r, eval = F}
model <- mirt(data = my_data, model = 1, SE = TRUE)
coef(result)
```

::: small
model = 1 indicates how many factors you want to include.
:::

To get factor scores, we do the following:

```{r, eval = F}
scores <- as.vector(fscores(model, method = "EAP"))
```

::: {.callout-note collapse="true" appearance="simple"}
## More on Choosing Between Models

To compare and choose between different models, we have a few ways.

1.  We can use a likelihood ratio test for nested models (see the regression section for more details).

```{r, eval = F}
lavTestLRT(model1, model2)
```

2.  We can use a global goodness of fit test - essentially a likelihood ratio but with the full sample covariance matrix as the null model. We want to **fail to reject** the null, because we want our model to be as close to the sample covariance matrix as possible.

```{r, eval = F}
lavTestLRT(model)
```

3.  We can use AIC and BIC to compare models since factor models are estimated with MLE. These are included in the output.

Unfortunately, fit indicies like RMSEA do not work on IRT models.
:::
