---
title: "Propensity Score Matching"
---

```{r}
#| message: false
#| warning: false

# Packages Needed:
library(Matching)
library(fixest)
```

Mia is in our study and receives the treatment. Mia's causal effect is:

$$
\tau_{\text{Mia}} = \textcolor{green}{Y^{(1)}_\text{Mia}} - \textcolor{red}{Y^{(0)}_\text{Mia}}
$$

We cannot observe Mia's counterfactual (in red), since Mia receives the treatment.. However, what we can do is to find an untreated individual similar to Mia to approximate Mia's counterfactual:

$$
\tau_{\text{Mia}} \approx \textcolor{green}{Y^{(1)}_\text{Mia}} - \textcolor{red}{Y^{(0)}_\text{Matched Individual}}
$$

Propensity Score Matching matches an individual that is treated (like Mia) with one that is not treated based on how similar their likelihoods of treatment are.

What is a likelihood of treatment? Well we know confounders cause people to get the treatment or not treatment. Thus, using an individual's confounder values, we can estimate their likelihood of getting treatment, called a propensity score.

$$
\text{propensity score } \pi =Pr(\green{D_i = 1}) 
$$

Propensity scores are typically estimated with a logistic regression with **all confounders** as explanatory variables.

::: small
This also means that propensity score matching shares the same weaknesses of logistic regression - including assuming linear relationships between confounders and propensities, and only being unbiased in large sample sizes.
:::

```{r}
#| echo: false
#| message: false
#| warning: false


library(tidyverse)
N = 1000
ATE = 2
  
df = tibble(
  cov1 = rbinom(N, 1, 0.5),
  cov2 = rnorm(N),
  P = rnorm(N),
  U = rnorm(N), 
  W = rnorm(N),
) %>%
  mutate(
    Y0 = 1 + 0.5*cov1 + 0.5*cov2 + 0.5*P + 0.5*U,
    Y1 = Y0 + rnorm(N, mean = ATE*1.5, sd = 1)*cov1 + rnorm(N, mean = ATE/2)*(1-cov1)
  )

df = df %>%
  mutate(
    U2 = rnorm(N),
    pscore = 1/(1 + exp(-(-1 - 2*cov1 - 1.5*cov2 + 1.5*W + 0.5*U2))),
    treatment = rbinom(N, 1, pscore),
    outcome = Y1*treatment + Y0*(1-treatment)
  )
```

```{r}
#| warning: false
#| message: false
#| comment: "#>"
#| class-output: r

# Logistic Model for Propensity Scores
propensity <- femlm(
  fml    = treatment ~ cov1 + cov2,  # include all confounders
  data   = df,                       # your data
  family = "logit"                  # tells R to use logistic reg
)

# Predice Propensity Scores for All Observations
df$pscore <- predict(propensity, type = "response")
```

Now with the propensity scores, we can conduct [distance matching](distance.qmd), matching units by how close their propensity scores are.

```{r}
#| warning: false
#| message: false
#| comment: "#>"
#| class-output: r

att <- Match(
  Y          = df$outcome,     # outcome var
  Tr         = df$treatment,   # treatment var
  X          = df[,"pscore"],  # propensity score var
  M          = 1,              # number of matches for each treated unit
  BiasAdjust = TRUE,           # modern adjustment - don't change
  Weight     = 2               # don't change
)

summary(att)
```

If [all confounders are included]{.underline}, our output estimate will be the ATT - the average treatment effect for those units who received the treatment.

::: small
Omission of any confounder will cause inaccurate matches, thus causing inaccurate results.
:::

Because propensity-score matching is dependent on the estimation of propensity scores, it is sensitive to poorly estimated propensity scores with the logistic regression, This tends to happen with smaller sample sizes, so the propensity score matching estimator can be poor in small sample sizes.

::: small
Kevin's Comments: there is little reason to use propensity score matching over genetic matching, unless your machine cannot estimate genetic matching.
:::

Propensity score matching (and all matching) also throws out a lot of data that is unmatched, which can be wasteful.
